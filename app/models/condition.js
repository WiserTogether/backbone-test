// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone', 'json!data/aneurysm.json'], function(_, Backbone, data) {
    var Condition;
    Condition = (function(_super) {

      __extends(Condition, _super);

      function Condition() {
        return Condition.__super__.constructor.apply(this, arguments);
      }

      Condition.prototype.defaults = {
        name: ''
      };

      Condition.prototype.fetch = function(options) {
        if (!this.set(data, options)) {
          return false;
        }
        return options != null ? typeof options.success === "function" ? options.success(this) : void 0 : void 0;
      };

      Condition.prototype.save = function(options) {
        if (options != null) {
          if (typeof options.success === "function") {
            options.success(this);
          }
        }
        return false;
      };

      return Condition;

    })(Backbone.Model);
    return new Condition;
  });

}).call(this);
